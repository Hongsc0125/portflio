import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { useState } from "react";
import ProjectDetailModal from "@/app/modal/ProjectDetailModal";

interface Project {
  id: number;
  title: string;
  description: string;
  isRunning: boolean;
  projectType: 'ÌåÄ' | 'Í∞úÏù∏';
}

const projectsData: Project[] = [
  {
    id: 1,
    isRunning: true,
    projectType: 'Í∞úÏù∏',
    title: "ÎßàÎπÑÎÖ∏Í∏∞ Î™®Î∞îÏùº Discord Î¥á",
    description: "ÎßàÎπÑÎÖ∏Í∏∞ Î™®Î∞îÏùº ÌîåÎ†àÏù¥ Ï§ë ÎäêÍºàÎçò Î∂àÌé∏Ìï®ÏùÑ Ìï¥ÏÜåÌïòÍ≥†Ïûê Discord Î¥áÏùÑ Í∞úÎ∞úÌñàÏäµÎãàÎã§.\nÏ£ºÏöî Í∏∞Îä•ÏúºÎ°ú Îû≠ÌÇπÏ†ïÎ≥¥, ÌååÌã∞Î™®Ïßë, Ïù∏Íµ¨ÌÜµÍ≥Ñ, ÏïåÎ¶ºÍ∏∞Îä• Îì±ÏùÑ Ï†úÍ≥µÌï©ÎãàÎã§."
  },
  {
    id: 2,
    isRunning: true,
    projectType: 'Í∞úÏù∏',
    title: "ÎåÄÏö©Îüâ ÌÅ¨Î°§ÎßÅ ÏÑúÎ≤Ñ Íµ¨Ï∂ï",
    description: "ÎßàÎπÑÎÖ∏Í∏∞ Î™®Î∞îÏùº Îû≠ÌÇπ ÏõπÌéòÏù¥ÏßÄÎ•º ÌÅ¨Î°§ÎßÅÌïòÏó¨ ÏïΩ 150ÎßåÎ™Ö Ïú†Ï†ÄÏùò Îç∞Ïù¥ÌÑ∞Î•º ÏûêÎèô ÏàòÏßë/DBÌôî\nÏã§ÏãúÍ∞Ñ Îû≠ÌÇπ Ï°∞Ìöå, Î©ÄÌã∞Ïä§Î†àÎìú/ÌÅê/Î∞∞Ïπò/Îç∞ÎìúÎùΩ Ìï¥Í≤∞ Îì± ÎåÄÏö©Îüâ Ï≤òÎ¶¨ Íµ¨Ï°∞ Í≤ΩÌóò"
  },
  {
    id: 3,
    isRunning: true,
    projectType: 'Í∞úÏù∏',
    title: "Í∞úÏù∏ Ìè¨Ìä∏Ìè¥Î¶¨Ïò§ ÏõπÏÇ¨Ïù¥Ìä∏",
    description: "Next.js, Tailwind CSS, shadcn/ui Í∏∞Î∞òÏùò Î∞òÏùëÌòï Ìè¨Ìä∏Ìè¥Î¶¨Ïò§ ÏõπÏÇ¨Ïù¥Ìä∏\nÍπîÎÅîÌïú UI/UX, ÏûêÎèô Î∞∞Ìè¨, Ïª¥Ìè¨ÎÑåÌä∏ Í∏∞Î∞ò Íµ¨Ï°∞ Íµ¨ÌòÑ"
  },
  {
    id: 4,
    isRunning: false,
    projectType: 'ÌåÄ',
    title: "Ìï†Î®∏Î¶¨ ÌîÑÎ°úÏ†ùÌä∏",
    description: "Î∏îÎ†àÏù¥Î≤ÑÏä§ 2025 MVP Ìï¥Ïª§ÌÜ§ÏóêÏÑú\nüëë3ÏúÑüëëÎ•º ÏàòÏÉÅÌïú ÏûëÌíàÏûÖÎãàÎã§.\nÏã§Ï†ú ÏòàÎπÑÏ∞ΩÏóÖÏûêÏùò ÏïÑÏù¥ÎîîÏñ¥Î•º Î∞îÌÉïÏúºÎ°ú, ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ÏôÄ ÏßÅÏ†ë ÏÜåÌÜµÌïòÎ©∞ 2Ï£ºÍ∞Ñ MVPÎ•º Í∞úÎ∞úÌñàÏäµÎãàÎã§.\nÎ°úÍ∑∏Ïù∏ ‚Üí Ìó§Ïñ¥ÎîîÏûêÏù¥ÎÑà Î¶¨Ïä§Ìä∏ ‚Üí ÏòàÏïΩ ‚Üí Íµ¨Í∏ÄÎØ∏Ìä∏ Ïù¥Î≤§Ìä∏ ÏÉùÏÑ± ‚Üí Í≤∞Ï†úÍπåÏßÄÏùò Ïã§ ÏÑúÎπÑÏä§ Î°úÏßÅÏùÑ Íµ¨ÌòÑÌïòÏòÄÍ≥†, Ïú†Ï†Ä Ìå®ÌÑ¥ Îç∞Ïù¥ÌÑ∞ ÏàòÏßë Î∞è ÎåÄÏãúÎ≥¥ÎìúÎèÑ Ï†úÍ≥µÌïòÎäî Îì± Ïã§Ï†ú Ï∞ΩÏóÖ ÌôòÍ≤ΩÏóê Í∞ÄÍπåÏö¥ Í≤ΩÌóòÏùÑ ÌñàÏäµÎãàÎã§."
  },
];

const ProjectsSection: React.FC = () => {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [selectedProjectId, setSelectedProjectId] = useState<number | null>(null);

  const openModal = (projectId: number) => {
    setSelectedProjectId(projectId);
    setIsModalOpen(true);
  };

  const closeModal = () => {
    setIsModalOpen(false);
    setSelectedProjectId(null);
  };

  return (
    <div>
      <div className="flex items-center gap-4 mb-2">
        <h2 className="text-2xl font-bold mb-0">Í∞úÏù∏ ÌîÑÎ°úÏ†ùÌä∏</h2>
        <div className="flex items-center gap-2 text-base">
          <span className="inline-block w-3 h-3 rounded-full bg-green-500 mr-1 align-middle shadow animate-pulse" title="Ïö¥ÏòÅÏ§ë" />Ïö¥ÏòÅÏ§ë
          <span className="inline-block w-3 h-3 rounded-full bg-red-500 mr-1 align-middle shadow animate-pulse" title="Ï¢ÖÎ£å" />Ï¢ÖÎ£å
        </div>
      </div>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-4">
        {projectsData.map((project) => (
          <Card key={project.id} className="flex flex-col bg-background text-foreground">
            <CardHeader className="bg-background">
              <CardTitle>
                {(project.isRunning) && (
                  <span className="inline-block w-3 h-3 rounded-full bg-green-500 mr-2 align-middle shadow animate-pulse" title="Ïö¥ÏòÅÏ§ë" />
                )}
                {(project.isRunning === false) && (
                  <span className="inline-block w-3 h-3 rounded-full bg-red-500 mr-2 align-middle shadow animate-pulse" title="Ï¢ÖÎ£å" />
                )}
                {project.title}
                <span className={
                  project.projectType === 'ÌåÄ'
                    ? 'inline-block px-2 py-0.5 text-xs font-semibold rounded bg-blue-100 text-blue-700 ml-2 align-middle'
                    : 'inline-block px-2 py-0.5 text-xs font-semibold rounded bg-purple-100 text-purple-700 ml-2 align-middle'}>
                  {project.projectType}
                </span>
              </CardTitle>
            </CardHeader>
            <CardContent className="flex flex-col justify-between flex-grow bg-background text-foreground">
              <p className="text-muted-foreground mb-4 whitespace-pre-line">
                {project.description}
              </p>
              <Button onClick={() => openModal(project.id)} className="mt-auto">
                ÏûêÏÑ∏Ìûà Î≥¥Í∏∞
              </Button>
            </CardContent>
          </Card>
        ))}
      </div>
      {selectedProjectId && (
        <ProjectDetailModal
          isOpen={isModalOpen}
          onClose={closeModal}
          projectId={selectedProjectId}
        />
      )}
    </div>
  );
};

export default ProjectsSection;
